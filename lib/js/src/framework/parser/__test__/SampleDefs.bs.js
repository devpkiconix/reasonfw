// Generated by BUCKLESCRIPT VERSION 4.0.14, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");

function makeStep(x) {
  return /* Step */Block.__(0, [
            x,
            x
          ]);
}

var def1_001 = /* Step */Block.__(0, [
    "a",
    "a"
  ]);

var def1 = /* Definition */[
  "sampleProcess1",
  def1_001
];

var def2_001 = /* Sequence */Block.__(2, [
    /* Step */Block.__(0, [
        "a",
        "a"
      ]),
    /* Step */Block.__(0, [
        "b",
        "b"
      ])
  ]);

var def2 = /* Definition */[
  "sampleProcess2",
  def2_001
];

var def3_001 = /* Sequence */Block.__(2, [
    /* Step */Block.__(0, [
        "a",
        "a"
      ]),
    /* Sequence */Block.__(2, [
        /* Step */Block.__(0, [
            "b",
            "b"
          ]),
        /* Step */Block.__(0, [
            "c",
            "c"
          ])
      ])
  ]);

var def3 = /* Definition */[
  "sampleProcess3",
  def3_001
];

var def4_001 = /* Sequence */Block.__(2, [
    /* Step */Block.__(0, [
        "a",
        "a"
      ]),
    /* Parallel */Block.__(3, [/* :: */[
          /* Step */Block.__(0, [
              "b",
              "b"
            ]),
          /* :: */[
            /* Step */Block.__(0, [
                "c",
                "c"
              ]),
            /* [] */0
          ]
        ]])
  ]);

var def4 = /* Definition */[
  "sampleProcess4",
  def4_001
];

var def5_001 = /* Sequence */Block.__(2, [
    /* Step */Block.__(0, [
        "a",
        "a"
      ]),
    /* Parallel */Block.__(3, [/* :: */[
          /* Step */Block.__(0, [
              "b",
              "b"
            ]),
          /* :: */[
            /* Step */Block.__(0, [
                "c",
                "c"
              ]),
            /* :: */[
              /* Step */Block.__(0, [
                  "d",
                  "d"
                ]),
              /* [] */0
            ]
          ]
        ]])
  ]);

var def5 = /* Definition */[
  "sampleProcess5",
  def5_001
];

var def6_001 = /* Sequence */Block.__(2, [
    /* Parallel */Block.__(3, [/* :: */[
          /* Step */Block.__(0, [
              "a",
              "a"
            ]),
          /* :: */[
            /* Step */Block.__(0, [
                "b",
                "b"
              ]),
            /* [] */0
          ]
        ]]),
    /* Sequence */Block.__(2, [
        /* Parallel */Block.__(3, [/* :: */[
              /* Step */Block.__(0, [
                  "c",
                  "c"
                ]),
              /* :: */[
                /* Step */Block.__(0, [
                    "d",
                    "d"
                  ]),
                /* [] */0
              ]
            ]]),
        /* Step */Block.__(0, [
            "e",
            "e"
          ])
      ])
  ]);

var def6 = /* Definition */[
  "sampleProcess6",
  def6_001
];

exports.makeStep = makeStep;
exports.def1 = def1;
exports.def2 = def2;
exports.def3 = def3;
exports.def4 = def4;
exports.def5 = def5;
exports.def6 = def6;
/* No side effect */
