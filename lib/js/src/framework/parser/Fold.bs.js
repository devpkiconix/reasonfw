// Generated by BUCKLESCRIPT VERSION 4.0.14, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Future = require("reason-future/lib/js/src/Future.bs.js");

function foldingFn(acc, cursor) {
  return Future.flatMap(acc, (function (somelist) {
                return Future.map(cursor, (function (someval) {
                              return List.append(somelist, /* :: */[
                                          someval,
                                          /* [] */0
                                        ]);
                            }));
              }));
}

function foldFutureList(futures) {
  var seed = Future.value(/* [] */0);
  return List.fold_left(foldingFn, seed, futures);
}

function foldRec(_acc, _futures) {
  while(true) {
    var futures = _futures;
    var acc = _acc;
    var cursor = List.hd(futures);
    var remaining = List.tl(futures);
    _futures = remaining;
    _acc = Future.flatMap(acc, (function(cursor){
        return function (somelist) {
          return Future.map(cursor, (function (someval) {
                        return List.append(somelist, /* :: */[
                                    someval,
                                    /* [] */0
                                  ]);
                      }));
        }
        }(cursor)));
    continue ;
  };
}

function foldFutureListRec(futures) {
  var seed = Future.value(/* [] */0);
  return foldRec(seed, futures);
}

exports.foldingFn = foldingFn;
exports.foldFutureList = foldFutureList;
exports.foldRec = foldRec;
exports.foldFutureListRec = foldFutureListRec;
/* No side effect */
