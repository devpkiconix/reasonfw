// Generated by BUCKLESCRIPT VERSION 4.0.14, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Block = require("bs-platform/lib/js/block.js");
var BsFluture = require("bs-fluture/lib/js/src/BsFluture.js");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");

function identity(name, x) {
  console.log("No matching function, no-op: " + name);
  return BsFluture.resolve(x);
}

function alwaysTrue(param) {
  return true;
}

function funcMapper(funcs, k) {
  var exit = 0;
  var val;
  try {
    val = List.find((function (i) {
            return i === k;
          }), funcs);
    exit = 1;
  }
  catch (exn){
    if (exn === Caml_builtin_exceptions.not_found) {
      return BsFluture.resolve;
    } else {
      throw exn;
    }
  }
  if (exit === 1) {
    return val[1];
  }
  
}

var fresolve = BsFluture.resolve;

function freject(err) {
  return BsFluture.reject(/* Error */Block.__(0, [err]));
}

var ffork = BsFluture.fork;

var ffold = BsFluture.fold;

var futureString = BsFluture.resolve;

var fIdentity = BsFluture.resolve;

exports.identity = identity;
exports.fIdentity = fIdentity;
exports.alwaysTrue = alwaysTrue;
exports.funcMapper = funcMapper;
exports.fresolve = fresolve;
exports.freject = freject;
exports.ffork = ffork;
exports.ffold = ffold;
exports.futureString = futureString;
/* BsFluture Not a pure module */
